#coding: utf8

from __future__ import print_function
from Tkinter import *
from tkMessageBox import askyesno, showinfo, showwarning
from time import asctime
from sqlite3 import connect
from copy import deepcopy
from random import randint

okno = Tk()
okno.minsize(1024,705)
okno.maxsize(1024,705)
okno.resizable(0,0)
okno.title("SuSol")

db = connect("data.db")

kur = None
trenink = False
zadaniSudoku = None
zkontrolovani = False
funkcePoradit = False
x = 0
y = 0
cislaVsudoku = [
[0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0]
]

editace = False
zobrazovaneSudoku = 0
datalist = []

resimPrazdnouMrizku = None

PrvniKontrola = True

cislaVsudokuOBJ = [
[None,None,None,None,None,None,None,None,None],
[None,None,None,None,None,None,None,None,None],
[None,None,None,None,None,None,None,None,None],
[None,None,None,None,None,None,None,None,None],
[None,None,None,None,None,None,None,None,None],
[None,None,None,None,None,None,None,None,None],
[None,None,None,None,None,None,None,None,None],
[None,None,None,None,None,None,None,None,None],
[None,None,None,None,None,None,None,None,None]
]

polozkyMenu = [None,None,None,None]
menuCesta = []

def zahodit():
    global cislaVsudoku, editace, cislaVsudokuOBJ, menuCesta

    cislaVsudoku = [
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0]
    ]

    editace = False
    C.delete(kur)

    for i in range(0,9,1):
        for j in range(0,9,1):
            try:
                C.delete(cislaVsudokuOBJ[i][j])
            except:
                continue

    menuCesta = [0,0,0]
    prechod_v_menu(menuCesta)

def hotovo():
    global editace, cislaVsudokuOBJ

    if cislaVsudoku == [
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0]
    ]:
        showwarning("Upozornění","Sudoku je prázdné, nemohu jej uložit.")
        return False

    casExport = asctime()
    sudokuExport = ""
    for i in range(0,9,1):
        for j in range(0,9,1):
            sudokuExport = sudokuExport + str(cislaVsudoku[i][j])

    db.execute("insert into zadani(vytvoreni,zadani) values('"+casExport+"','"+sudokuExport+"')")
    db.commit()

    editace = False
    try:
        C.delete(kur)
    except:
        pass

    for i in range(0,9,1):
        for j in range(0,9,1):
            try:
                C.delete(cislaVsudokuOBJ[i][j])
            except:
                continue
            if cislaVsudoku[i][j] != 0:
                cislaVsudokuOBJ[i][j] = C.create_text(j*78+39,i*78+41, text=cislaVsudoku[i][j], font="arial 70 bold", fill="#000000")

    return True


def zapsatCislo(cislo):
    global cislaVsudokuOBJ, cislaVsudoku, x, y

    try:
        C.delete(cislaVsudokuOBJ[x][y])
    except:
        pass

    if cislo != "0":
        cislaVsudokuOBJ[x][y] = C.create_text(y*78+39,x*78+41, text=cislo, font="arial 70 bold", fill="#000088")
    cislaVsudoku[x][y] = int(cislo)

    y = y + 1
    if y == 9:
        y = 0
        x = x + 1
        if x == 9:
            x = 0

    kurzor([x,y])

def doplnTrenink(cislo):
    global x,y, cislaVsudokuOBJ, cislaVsudoku

    if zadaniSudoku[x][y] != 0:
        return False

    try:
        C.delete(cislaVsudokuOBJ[x][y])
    except:
        pass

    if cislo != "0":
        cislaVsudokuOBJ[x][y] = C.create_text(y*78+39,x*78+41, text=cislo, font="arial 70 bold", fill="#0000ff")
    cislaVsudoku[x][y] = int(cislo)

    y = y + 1
    if y == 9:
        y = 0
        x = x + 1
        if x == 9:
            x = 0

    kurzor([x,y])


def editovat():
    global cislaVsudoku, editace, x, y

    editace = True
    x = 0
    y = 0
    kurzor([0,0])
    for i in range(0,9,1):
        for j in range(0,9,1):
            try:
                C.delete(cislaVsudokuOBJ[i][j])
            except:
                continue
            if cislaVsudoku[i][j] != 0:
                cislaVsudokuOBJ[i][j] = C.create_text(j*78+39,i*78+41, text=cislaVsudoku[i][j], font="arial 70 bold", fill="#000088")

def kurzor(kam):
    global kur
    try:
        C.delete(kur)
    except:
        pass

    kur = C.create_rectangle(kam[1]*78+1,kam[0]*78+1,kam[1]*78+78,kam[0]*78+78, outline="#ff0000", width="3")


def konec():
    if askyesno("Dotaz","Opravdu chcete skončit?"):
        okno.destroy()


def vzdat():
    global menuCesta

    if askyesno("Dotaz","Opravdu se chcete vzdát?"):
        del menuCesta[len(menuCesta)-1]
        prechod_v_menu(menuCesta)

def vykreslit_sudoku(sd,barva):
    global cislaVsudoku, cislaVsudokuOBJ

    if sd != cislaVsudoku:
        for i in range(0,9,1):
            for j in range(0,9,1):
                cislaVsudoku[i][j] = sd[i][j]

    for i in range(0,9,1):
        for j in range(0,9,1):
            try:
                C.delete(cislaVsudokuOBJ[i][j])
            except:
                continue
            if cislaVsudoku[i][j] != 0:
                cislaVsudokuOBJ[i][j] = C.create_text(j*78+39,i*78+41, text=cislaVsudoku[i][j], font="arial 70 bold", fill=barva)

def vykreslit_dvoubarevne_sudoku(sd1,sd2,barva1,barva2):
    global cislaVsudokuOBJ

    for i in range(0,9,1):
        for j in range(0,9,1):
            if sd2[i][j] != 0 and sd1[i][j] == 0:
                try:
                    C.delete(cislaVsudokuOBJ[i][j])
                except:
                    pass
                if cislaVsudoku[i][j] != 0:
                    cislaVsudokuOBJ[i][j] = C.create_text(j*78+39,i*78+41, text=sd2[i][j], font="arial 70 bold", fill=barva2)

            elif sd1 != 0:
                try:
                    C.delete(cislaVsudokuOBJ[i][j])
                except:
                    pass
                if cislaVsudoku[i][j] != 0:
                    cislaVsudokuOBJ[i][j] = C.create_text(j*78+39,i*78+41, text=sd1[i][j], font="arial 70 bold", fill=barva1)



def smazat_sudoku():
    global cislaVsudoku, cislaVsudokuOBJ

    cislaVsudoku = [
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0]
    ]

    for i in range(0,9,1):
        for j in range(0,9,1):
            try:
                C.delete(cislaVsudokuOBJ[i][j])
            except:
                continue



def prechod_v_menu(kam):
    global polozkyMenu

    for i in polozkyMenu:
        try:
            i.destroy()
        except:
            pass

    if kam == [0]:
        polozkyMenu[0] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[0].create_text(100,25,text="Nové (n)", font="Arial 20")
        polozkyMenu[0].place(x=765,y=50)
        polozkyMenu[0].bind("<Enter>",najeti0)
        polozkyMenu[0].bind("<Leave>",sjeti0)
        polozkyMenu[0].bind("<Button 1>",klik0)

        polozkyMenu[1] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[1].create_text(100,25,text="Databáze (d)", font="Arial 20")
        polozkyMenu[1].place(x=765,y=120)
        polozkyMenu[1].bind("<Enter>",najeti1)
        polozkyMenu[1].bind("<Leave>",sjeti1)
        polozkyMenu[1].bind("<Button 1>",klik1)

        polozkyMenu[2] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[2].create_text(100,25,text="Vygenerovat (g)", font="Arial 20")
        polozkyMenu[2].place(x=765,y=190)
        polozkyMenu[2].bind("<Enter>",najeti2)
        polozkyMenu[2].bind("<Leave>",sjeti2)
        polozkyMenu[2].bind("<Button 1>",klik2)

        polozkyMenu[3] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[3].create_text(100,25,text="Zpět (Esc)", font="Arial 20")
        polozkyMenu[3].place(x=765,y=260)
        polozkyMenu[3].bind("<Enter>",najeti3)
        polozkyMenu[3].bind("<Leave>",sjeti3)
        polozkyMenu[3].bind("<Button 1>",klik3)

    elif kam == []:
        polozkyMenu[0] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[0].create_text(100,25,text="Zadání (z)", font="Arial 20")
        polozkyMenu[0].place(x=765,y=50)
        polozkyMenu[0].bind("<Enter>",najeti0)
        polozkyMenu[0].bind("<Leave>",sjeti0)
        polozkyMenu[0].bind("<Button 1>",klik0)

        polozkyMenu[1] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[1].create_text(100,25,text="Řešení (r)", font="Arial 20")
        polozkyMenu[1].place(x=765,y=120)
        polozkyMenu[1].bind("<Enter>",najeti1)
        polozkyMenu[1].bind("<Leave>",sjeti1)
        polozkyMenu[1].bind("<Button 1>",klik1)

        polozkyMenu[2] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[2].create_text(100,25,text="Návod (n)", font="Arial 20")
        polozkyMenu[2].place(x=765,y=190)
        polozkyMenu[2].bind("<Enter>",najeti2)
        polozkyMenu[2].bind("<Leave>",sjeti2)
        polozkyMenu[2].bind("<Button 1>",klik2)

        polozkyMenu[3] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[3].create_text(100,25,text="Konec (Esc)", font="Arial 20")
        polozkyMenu[3].place(x=765,y=260)
        polozkyMenu[3].bind("<Enter>",najeti3)
        polozkyMenu[3].bind("<Leave>",sjeti3)
        polozkyMenu[3].bind("<Button 1>",klik3)

    elif kam == [0,0]:
        polozkyMenu[0] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[0].create_text(100,25,text="Klávesnice (k)", font="Arial 20")
        polozkyMenu[0].place(x=765,y=50)
        polozkyMenu[0].bind("<Enter>",najeti0)
        polozkyMenu[0].bind("<Leave>",sjeti0)
        polozkyMenu[0].bind("<Button 1>",klik0)

        polozkyMenu[1] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[1].create_text(100,25,text="Webkamera (w)", font="Arial 20")
        polozkyMenu[1].place(x=765,y=120)
        polozkyMenu[1].bind("<Enter>",najeti1)
        polozkyMenu[1].bind("<Leave>",sjeti1)
        polozkyMenu[1].bind("<Button 1>",klik1)

        polozkyMenu[3] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[3].create_text(100,25,text="Zpět (Esc)", font="Arial 20")
        polozkyMenu[3].place(x=765,y=260)
        polozkyMenu[3].bind("<Enter>",najeti3)
        polozkyMenu[3].bind("<Leave>",sjeti3)
        polozkyMenu[3].bind("<Button 1>",klik3)

    elif kam == [1]:
        polozkyMenu[0] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[0].create_text(100,25,text="Řešit na čas (r)", font="Arial 20")
        polozkyMenu[0].place(x=765,y=50)
        polozkyMenu[0].bind("<Enter>",najeti0)
        polozkyMenu[0].bind("<Leave>",sjeti0)
        polozkyMenu[0].bind("<Button 1>",klik0)

        polozkyMenu[1] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[1].create_text(100,25,text="Trénink (t)", font="Arial 20")
        polozkyMenu[1].place(x=765,y=120)
        polozkyMenu[1].bind("<Enter>",najeti1)
        polozkyMenu[1].bind("<Leave>",sjeti1)
        polozkyMenu[1].bind("<Button 1>",klik1)

        polozkyMenu[2] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[2].create_text(100,25,text="Vyřešit PC (v)", font="Arial 20")
        polozkyMenu[2].place(x=765,y=190)
        polozkyMenu[2].bind("<Enter>",najeti2)
        polozkyMenu[2].bind("<Leave>",sjeti2)
        polozkyMenu[2].bind("<Button 1>",klik2)

        polozkyMenu[3] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[3].create_text(100,25,text="Zpět (Esc)", font="Arial 20")
        polozkyMenu[3].place(x=765,y=260)
        polozkyMenu[3].bind("<Enter>",najeti3)
        polozkyMenu[3].bind("<Leave>",sjeti3)
        polozkyMenu[3].bind("<Button 1>",klik3)

    elif kam == [1,1]:
        polozkyMenu[0] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[0].create_text(100,25,text="Zkontrolovat (z)", font="Arial 20")
        polozkyMenu[0].place(x=765,y=50)
        polozkyMenu[0].bind("<Enter>",najeti0)
        polozkyMenu[0].bind("<Leave>",sjeti0)
        polozkyMenu[0].bind("<Button 1>",klik0)

        polozkyMenu[1] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[1].create_text(100,25,text="Poradit (p)", font="Arial 20")
        polozkyMenu[1].place(x=765,y=120)
        polozkyMenu[1].bind("<Enter>",najeti1)
        polozkyMenu[1].bind("<Leave>",sjeti1)
        polozkyMenu[1].bind("<Button 1>",klik1)

        polozkyMenu[3] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[3].create_text(100,25,text="Zpět (Esc)", font="Arial 20")
        polozkyMenu[3].place(x=765,y=260)
        polozkyMenu[3].bind("<Enter>",najeti3)
        polozkyMenu[3].bind("<Leave>",sjeti3)
        polozkyMenu[3].bind("<Button 1>",klik3)

    elif kam == [2]:
        polozkyMenu[0] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[0].create_text(100,25,text="Sudoku (s)", font="Arial 20")
        polozkyMenu[0].place(x=765,y=50)
        polozkyMenu[0].bind("<Enter>",najeti0)
        polozkyMenu[0].bind("<Leave>",sjeti0)
        polozkyMenu[0].bind("<Button 1>",klik0)

        polozkyMenu[1] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[1].create_text(100,25,text="SuSol (u)", font="Arial 20")
        polozkyMenu[1].place(x=765,y=120)
        polozkyMenu[1].bind("<Enter>",najeti1)
        polozkyMenu[1].bind("<Leave>",sjeti1)
        polozkyMenu[1].bind("<Button 1>",klik1)

        polozkyMenu[3] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[3].create_text(100,25,text="Zpět (Esc)", font="Arial 20")
        polozkyMenu[3].place(x=765,y=260)
        polozkyMenu[3].bind("<Enter>",najeti3)
        polozkyMenu[3].bind("<Leave>",sjeti3)
        polozkyMenu[3].bind("<Button 1>",klik3)

    elif kam == [2,0]:
        polozkyMenu[0] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[0].create_text(100,25,text="O hře (h)", font="Arial 20")
        polozkyMenu[0].place(x=765,y=50)
        polozkyMenu[0].bind("<Enter>",najeti0)
        polozkyMenu[0].bind("<Leave>",sjeti0)
        polozkyMenu[0].bind("<Button 1>",klik0)

        polozkyMenu[1] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[1].create_text(100,25,text="Strategie (s)", font="Arial 20")
        polozkyMenu[1].place(x=765,y=120)
        polozkyMenu[1].bind("<Enter>",najeti1)
        polozkyMenu[1].bind("<Leave>",sjeti1)
        polozkyMenu[1].bind("<Button 1>",klik1)

        polozkyMenu[3] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[3].create_text(100,25,text="Zpět (Esc)", font="Arial 20")
        polozkyMenu[3].place(x=765,y=260)
        polozkyMenu[3].bind("<Enter>",najeti3)
        polozkyMenu[3].bind("<Leave>",sjeti3)
        polozkyMenu[3].bind("<Button 1>",klik3)

    elif kam == [2,1]:
        polozkyMenu[0] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[0].create_text(100,25,text="Manuál (m)", font="Arial 20")
        polozkyMenu[0].place(x=765,y=50)
        polozkyMenu[0].bind("<Enter>",najeti0)
        polozkyMenu[0].bind("<Leave>",sjeti0)
        polozkyMenu[0].bind("<Button 1>",klik0)

        polozkyMenu[1] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[1].create_text(100,25,text="O programu (o)", font="Arial 20")
        polozkyMenu[1].place(x=765,y=120)
        polozkyMenu[1].bind("<Enter>",najeti1)
        polozkyMenu[1].bind("<Leave>",sjeti1)
        polozkyMenu[1].bind("<Button 1>",klik1)

        polozkyMenu[3] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[3].create_text(100,25,text="Zpět (Esc)", font="Arial 20")
        polozkyMenu[3].place(x=765,y=260)
        polozkyMenu[3].bind("<Enter>",najeti3)
        polozkyMenu[3].bind("<Leave>",sjeti3)
        polozkyMenu[3].bind("<Button 1>",klik3)

    elif kam == [1,0]:
        polozkyMenu[0] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[0].create_text(100,25,text="Řešit (r)", font="Arial 20")
        polozkyMenu[0].place(x=765,y=50)
        polozkyMenu[0].bind("<Enter>",najeti0)
        polozkyMenu[0].bind("<Leave>",sjeti0)
        polozkyMenu[0].bind("<Button 1>",klik0)

        polozkyMenu[1] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[1].create_text(100,25,text="Výsledky (v)", font="Arial 20")
        polozkyMenu[1].place(x=765,y=120)
        polozkyMenu[1].bind("<Enter>",najeti1)
        polozkyMenu[1].bind("<Leave>",sjeti1)
        polozkyMenu[1].bind("<Button 1>",klik1)

        polozkyMenu[3] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[3].create_text(100,25,text="Zpět (Esc)", font="Arial 20")
        polozkyMenu[3].place(x=765,y=260)

    elif kam == [0,0,0,0]:
        polozkyMenu[0] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[0].create_text(100,25,text="Uložit (Enter)", font="Arial 20")
        polozkyMenu[0].place(x=765,y=50)
        polozkyMenu[0].bind("<Enter>",najeti0)
        polozkyMenu[0].bind("<Leave>",sjeti0)
        polozkyMenu[0].bind("<Button 1>",klik0)

        polozkyMenu[3] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[3].create_text(100,25,text="Zahodit (Esc)", font="Arial 20")
        polozkyMenu[3].place(x=765,y=260)
        polozkyMenu[3].bind("<Enter>",najeti3)
        polozkyMenu[3].bind("<Leave>",sjeti3)
        polozkyMenu[3].bind("<Button 1>",klik3)

    elif kam == [0,1]:
        polozkyMenu[0] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[0].create_text(100,25,text="Vybrat (Enter)", font="Arial 20")
        polozkyMenu[0].place(x=765,y=50)
        polozkyMenu[0].bind("<Enter>",najeti0)
        polozkyMenu[0].bind("<Leave>",sjeti0)
        polozkyMenu[0].bind("<Button 1>",klik0)

        polozkyMenu[1] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[1].create_text(100,25,text="Předch. (Left)", font="Arial 20")
        polozkyMenu[1].place(x=765,y=120)
        polozkyMenu[1].bind("<Enter>",najeti1)
        polozkyMenu[1].bind("<Leave>",sjeti1)
        polozkyMenu[1].bind("<Button 1>",klik1)

        polozkyMenu[2] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[2].create_text(100,25,text="Násl. (Right)", font="Arial 20")
        polozkyMenu[2].place(x=765,y=190)
        polozkyMenu[2].bind("<Enter>",najeti2)
        polozkyMenu[2].bind("<Leave>",sjeti2)
        polozkyMenu[2].bind("<Button 1>",klik2)

        polozkyMenu[3] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[3].create_text(100,25,text="Zpět (Esc)", font="Arial 20")
        polozkyMenu[3].place(x=765,y=260)
        polozkyMenu[3].bind("<Enter>",najeti3)
        polozkyMenu[3].bind("<Leave>",sjeti3)
        polozkyMenu[3].bind("<Button 1>",klik3)

    elif kam == [0,1,0]:
        polozkyMenu[0] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[0].create_text(100,25,text="Načíst (Enter)", font="Arial 20")
        polozkyMenu[0].place(x=765,y=50)
        polozkyMenu[0].bind("<Enter>",najeti0)
        polozkyMenu[0].bind("<Leave>",sjeti0)
        polozkyMenu[0].bind("<Button 1>",klik0)

        polozkyMenu[1] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[1].create_text(100,25,text="Editovat (e)", font="Arial 20")
        polozkyMenu[1].place(x=765,y=120)
        polozkyMenu[1].bind("<Enter>",najeti1)
        polozkyMenu[1].bind("<Leave>",sjeti1)
        polozkyMenu[1].bind("<Button 1>",klik1)

        polozkyMenu[2] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[2].create_text(100,25,text="Smazat (Delete)", font="Arial 20")
        polozkyMenu[2].place(x=765,y=190)
        polozkyMenu[2].bind("<Enter>",najeti2)
        polozkyMenu[2].bind("<Leave>",sjeti2)
        polozkyMenu[2].bind("<Button 1>",klik2)

        polozkyMenu[3] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[3].create_text(100,25,text="Zpět (Esc)", font="Arial 20")
        polozkyMenu[3].place(x=765,y=260)
        polozkyMenu[3].bind("<Enter>",najeti3)
        polozkyMenu[3].bind("<Leave>",sjeti3)
        polozkyMenu[3].bind("<Button 1>",klik3)

    elif kam == [0,1,0,1]:
        polozkyMenu[0] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[0].create_text(100,25,text="Uložit (Enter)", font="Arial 20")
        polozkyMenu[0].place(x=765,y=50)
        polozkyMenu[0].bind("<Enter>",najeti0)
        polozkyMenu[0].bind("<Leave>",sjeti0)
        polozkyMenu[0].bind("<Button 1>",klik0)

        polozkyMenu[3] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[3].create_text(100,25,text="Zahodit (Esc)", font="Arial 20")
        polozkyMenu[3].place(x=765,y=260)
        polozkyMenu[3].bind("<Enter>",najeti3)
        polozkyMenu[3].bind("<Leave>",sjeti3)
        polozkyMenu[3].bind("<Button 1>",klik3)

    elif kam == [1,2]:
        polozkyMenu[3] = Canvas(okno,width=200, height=50, bg="#ffffff")
        polozkyMenu[3].create_text(100,25,text="Zpět (Esc)", font="Arial 20")
        polozkyMenu[3].place(x=765,y=260)
        polozkyMenu[3].bind("<Enter>",najeti3)
        polozkyMenu[3].bind("<Leave>",sjeti3)
        polozkyMenu[3].bind("<Button 1>",klik3)

    okno.update()

def z_databaze():
    global zobrazovaneSudoku, datalist

    datab = db.execute("select * from zadani")
    datalist = []

    for i in datab:
        datalist.append(i)

    if datalist == []:
        escape(0)
        smazat_sudoku()
        showinfo("Info","V databázi se žádné sudoku nenachází.")
        return False

    zobrazovaneSudoku = len(datalist)-1

    sudoku = preformatovat_sudoku(datalist[zobrazovaneSudoku][1])
    vykreslit_sudoku(sudoku,"#dddddd")

def preformatovat_sudoku(sd):
    vstupni_pole = []
    for i in range(0,9,1):
        vstupni_pole.append([])
        for j in range(0,9,1):
            vstupni_pole[i].append(int(sd[i*9+j]))

    return vstupni_pole

def treninkF():
    global trenink, kur, x, y, zadaniSudoku, PrvniKontrola

    candidates = generate_candidates(cislaVsudoku)
    candidates = kontrola(candidates)
    if candidates == False:
        return False

    PrvniKontrola = False
    candidates = brute_force(candidates)
    PrvniKontrola = True

    x = 0
    y = 0

    trenink = True
    zadaniSudoku = deepcopy(cislaVsudoku)
    kurzor([0,0])


def vyber_predchozi():
    global zobrazovaneSudoku

    if zobrazovaneSudoku > 0:
        zobrazovaneSudoku = zobrazovaneSudoku - 1
    else:
        zobrazovaneSudoku = len(datalist)-1

    sudoku = preformatovat_sudoku(datalist[zobrazovaneSudoku][1])
    vykreslit_sudoku(sudoku,"#dddddd")

def vyber_nasledujici():
    global zobrazovaneSudoku

    if zobrazovaneSudoku < len(datalist)-1:
        zobrazovaneSudoku = zobrazovaneSudoku + 1
    else:
        zobrazovaneSudoku = 0

    sudoku = preformatovat_sudoku(datalist[zobrazovaneSudoku][1])
    vykreslit_sudoku(sudoku,"#dddddd")

def vymazat_z_databaze():
    global menuCesta

    db.execute("delete from zadani where vytvoreni='"+datalist[zobrazovaneSudoku][0]+"'")
    db.commit()

    del menuCesta[len(menuCesta)-1]
    prechod_v_menu(menuCesta)

    z_databaze()

def nacist_z_databaze():
    global menuCesta

    vykreslit_sudoku(cislaVsudoku,"#000000")
    menuCesta = []
    prechod_v_menu(menuCesta)

def init_reseni():
    if cislaVsudoku == [
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0]
    ]:
        if askyesno("Dotaz","Chystáte se řešit prázdnou mřížku. Dosažený výsledek nebude zaznamenán. Chcete pokračovat?"):
            return True
        else:
            return False
    else:
        return True


def vyresitPC():
    global cislaVsudoku, PrvniKontrola, menuCesta, zadaniSudoku

    if not askyesno("Dotaz","Počítač vyřeší celé sudoku. Chcete pokračovat?"):
        return False
    else:
        zadaniSudoku = deepcopy(cislaVsudoku)

        candidates = generate_candidates(cislaVsudoku)
        candidates = kontrola(candidates)
        if candidates == False:
            return False

        PrvniKontrola = False
        candidates = brute_force(candidates)
        PrvniKontrola = True

        if candidates == False:
            return False
        else:
            for i in range(0,9,1):
                for j in range(0,9,1):
                    cislaVsudoku[i][j] = candidates[i][j][0]
            vykreslit_dvoubarevne_sudoku(zadaniSudoku,cislaVsudoku,"#000000","#000088")
            menuCesta = [1,2]
            prechod_v_menu(menuCesta)

def zkontrolovat():
    global PrvniKontrola, zkontrolovani

    zkontrolovani = True

    candidates = generate_candidates(cislaVsudoku)
    candidates = kontrola(candidates)
    if candidates == False:
        if funkcePoradit == False:
            showwarning("Upozornění","Sudoku obsahuje chyby.")
        return False
    PrvniKontrola = False
    candidates = brute_force(candidates)
    PrvniKontrola = True
    if candidates == False:
        if funkcePoradit == False:
            showwarning("Upozornění","Sudoku obsahuje chyby.")
        return False

    if funkcePoradit == False:
        showinfo("Info","Sudoku je bez chyb.")
    return True

def poradit():
    global PrvniKontrola, cislaVsudoku, funkcePoradit

    funkcePoradit = True

    if zkontrolovat() == False:
        showwarning("Upozornění","Sudoku obsahuje chyby. Nejprve je opravte.")
        funkcePoradit = False
        return False

    spravneReseni = [
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0]
    ]

    candidates = generate_candidates(cislaVsudoku)
    candidates = kontrola(candidates)
    PrvniKontrola = False
    candidates = brute_force(candidates)
    PrvniKontrola = True

    for i in range(0,9,1):
        for j in range(0,9,1):
            spravneReseni[i][j] = candidates[i][j][0]

    i = randint(0,8)
    j = randint(0,8)
    if "0" in stringFormat(cislaVsudoku):
        while not cislaVsudoku[i][j] == 0:
            i = randint(0,8)
            j = randint(0,8)
    else:
        showinfo("Info","Sudoku je již vyřešeno.")

    cislaVsudoku[i][j] = spravneReseni[i][j]

    vykreslit_dvoubarevne_sudoku(zadaniSudoku,cislaVsudoku,"#000000","#0000ff")
    funkcePoradit = False




def najeti0(x):
    polozkyMenu[0].configure(bg="#0000ff")

def najeti1(x):
    polozkyMenu[1].configure(bg="#0000ff")

def najeti2(x):
    polozkyMenu[2].configure(bg="#0000ff")

def najeti3(x):
    polozkyMenu[3].configure(bg="#0000ff")

def sjeti0(x):
    polozkyMenu[0].configure(bg="#ffffff")

def sjeti1(x):
    polozkyMenu[1].configure(bg="#ffffff")

def sjeti2(x):
    polozkyMenu[2].configure(bg="#ffffff")

def sjeti3(x):
    polozkyMenu[3].configure(bg="#ffffff")

def klik0(x):
    pass

def klik1(x):
    pass

def klik2(x):
    pass

def klik3(x):
    pass



def souradnice(klik):
    global x,y
    y = klik.x
    x = klik.y

    y = y // 78
    x = x // 78

    if x > 8 or y > 8:
        return False

    return([x,y])

def vlevo(klavesa):
    global x,y

    if editace or trenink:
        y = y - 1
        if y == -1:
            y = 8
            x = x - 1
            if x == -1:
                x = 8

        kurzor([x,y])

    if menuCesta == [0,1]:
        vyber_predchozi()

def vpravo(klavesa):
    global x,y

    if editace or trenink:
        y = y + 1
        if y == 9:
            y = 0
            x = x + 1
            if x == 9:
                x = 0

        kurzor([x,y])

    if menuCesta == [0,1]:
        vyber_nasledujici()

def nahoru(klavesa):
    global x,y

    if editace or trenink:
        x = x - 1
        if x == -1:
            x = 8

        kurzor([x,y])

def dolu(klavesa):
    global x,y

    if editace or trenink:
        x = x + 1
        if x == 9:
            x = 0

        kurzor([x,y])

def escape(klavesa):
    global menuCesta, trenink, zadaniSudoku, cislaVsudoku

    if menuCesta == []:
        konec()
        return False

    elif menuCesta == [0,0,0,0]:
        if not askyesno("Dotaz","Opravdu chcete sudoku zahodit? Již nebude možno jej znovu obnovit!"):
            return False
        else:
            zahodit()

    elif menuCesta == [0,1,0]:
        vykreslit_sudoku(cislaVsudoku, "#dddddd")

    elif menuCesta == [0,1]:
        smazat_sudoku()

    elif menuCesta == [1,2]:
        smazat_sudoku()
        vykreslit_sudoku(zadaniSudoku,"#000000")
        cislaVsudoku = deepcopy(zadaniSudoku)

    elif menuCesta == [1,1]:
        if askyesno("Dotaz","Ukončit trénink?"):
            trenink = False
            smazat_sudoku()
            vykreslit_sudoku(zadaniSudoku,"#000000")
            cislaVsudoku = deepcopy(zadaniSudoku)
            try:
                C.delete(kur)
            except:
                pass
        else:
            return False


    del menuCesta[len(menuCesta)-1]
    prechod_v_menu(menuCesta)

def enter(klavesa):
    global menuCesta

    if menuCesta == [0,0]:
        menuCesta = [0,0,0,0]
        prechod_v_menu(menuCesta)
        editovat()

    elif menuCesta == [0,0,0,0]:
        if hotovo():
            menuCesta = []
            prechod_v_menu(menuCesta)


    elif menuCesta == [0,1]:
        menuCesta = [0,1,0]
        prechod_v_menu(menuCesta)
        vykreslit_sudoku(cislaVsudoku,"#888888")

    elif menuCesta == [0,1,0]:
        nacist_z_databaze()

    elif menuCesta == [0,1,0,1]:
        if hotovo():
            menuCesta = [0,1,0]
            prechod_v_menu(menuCesta)
            vykreslit_sudoku(cislaVsudoku,"#888888")

def key(klavesa):
    global menuCesta
    klavesa = klavesa.char

    if editace and klavesa in ("1","2","3","4","5","6","7","8","9"):
        zapsatCislo(klavesa)

    if editace and klavesa == " ":
        zapsatCislo("0")

    if trenink and klavesa in ("1","2","3","4","5","6","7","8","9"):
        doplnTrenink(klavesa)

    if trenink and klavesa == " ":
        doplnTrenink("0")

    if menuCesta == []:
        if klavesa == "z" or klavesa == "Z":
            menuCesta = [0]
            prechod_v_menu(menuCesta)
        elif klavesa == "r" or klavesa == "R":
            if init_reseni():
                menuCesta = [1]
                prechod_v_menu(menuCesta)
        elif klavesa == "n" or klavesa == "N":
            menuCesta = [2]
            prechod_v_menu(menuCesta)

    elif menuCesta == [0]:
        if klavesa == "n" or klavesa == "N":
            menuCesta = [0,0]
            prechod_v_menu(menuCesta)
        elif klavesa == "d" or klavesa == "D":
            menuCesta = [0,1]
            prechod_v_menu(menuCesta)
            z_databaze()
        elif klavesa == "g" or klavesa == "G":
            print("FUNKCE VYGENEROVAT")

    elif menuCesta == [1]:
        if klavesa == "r" or klavesa == "R":
            menuCesta = [1,0]
            prechod_v_menu(menuCesta)
        elif klavesa == "t" or klavesa == "T":
            if askyesno("Dotaz","Budete řešit sudoku s možností nechat si zkontrolovat doplněná čísla a nechat si poradit náhodné číslo v mřížce. Čas nebude zaznamenán. Chcete pokračovat?"):
                menuCesta = [1,1]
                prechod_v_menu(menuCesta)
                treninkF()
        elif klavesa == "v" or klavesa == "V":
            vyresitPC()

    elif menuCesta == [2]:
        if klavesa == "u" or klavesa == "U":
            menuCesta = [2,1]
            prechod_v_menu(menuCesta)

        elif klavesa == "s" or klavesa == "S":
            menuCesta = [2,0]
            prechod_v_menu(menuCesta)

    elif menuCesta == [0,0]:
        if klavesa == "k" or klavesa == "K":
            menuCesta = [0,0,0,0]
            prechod_v_menu(menuCesta)
            smazat_sudoku()
            editovat()

    elif menuCesta == [0,1,0]:
        if klavesa == "E" or klavesa == "e":
            menuCesta = [0,1,0,1]
            prechod_v_menu(menuCesta)
            editovat()


    elif menuCesta == [1,0]:
        if klavesa == "r" or klavesa == "R":
            if askyesno("Dotaz","Budete řešit sudoku na čas. Výsledek se poté zaznamená do databáze. Chcete pokračovat?"):
                print("resit")
        elif klavesa == "v" or klavesa == "V":
            print("vysledky")

    elif menuCesta == [1,1]:
        if klavesa == "z" or klavesa == "Z":
            zkontrolovat()
        elif klavesa == "p" or klavesa == "P":
            poradit()



def klik(klavesa):
    if editace or trenink:
        klik = souradnice(klavesa)



        if klik != False:
            kurzor(klik)

def Rklik(klavesa):
    print("pravy klik")

def bksp(klavesa):
    if editace:
        vlevo(0)
        zapsatCislo("0")
        vlevo(0)

    if trenink:
        vlevo(0)
        doplnTrenink("0")
        vlevo(0)

def delete(klavesa):

    if editace:
        zapsatCislo("0")

    if trenink:
        doplnTrenink("0")

    if menuCesta == [0,1,0]:
        if askyesno("Dotaz","Opravdu chcete toto sudoku vymazat z databáze?"):
            vymazat_z_databaze()

def stringFormat(sudoku):
    a = ""
    for i in range(0,9,1):
        for j in range(0,9,1):
            a = a + str(sudoku[i][j])

    return a



def generate_candidates(template):
    cand = [
    [[],[],[],[],[],[],[],[],[]],
    [[],[],[],[],[],[],[],[],[]],
    [[],[],[],[],[],[],[],[],[]],
    [[],[],[],[],[],[],[],[],[]],
    [[],[],[],[],[],[],[],[],[]],
    [[],[],[],[],[],[],[],[],[]],
    [[],[],[],[],[],[],[],[],[]],
    [[],[],[],[],[],[],[],[],[]],
    [[],[],[],[],[],[],[],[],[]]
    ]
    for i in range(0,9,1):
        for j in range(0,9,1):
            if template[j][i] == 0:
                cand[j][i] = [1,2,3,4,5,6,7,8,9]
            else:
                cand[j][i] = [template[j][i]]
    return cand

def pravidlova_zkouska(cand):
    global menuCesta

    for i in range(0,9,1):
        removeRadek = []
        removeSloupec = []
        removeCtverec = []
        dm = divmod(i,3)

        for j in range(0,9,1):
            if len(cand[i][j]) == 1:
                removeRadek.append(cand[i][j][0])
            if len(cand[j][i]) == 1:
                removeSloupec.append(cand[j][i][0])

            dm2 = divmod(j,3)
            x = dm[1]*3+dm2[1]
            y = dm[0]*3+dm2[0]
            if len(cand[x][y]) == 1:
                removeCtverec.append(cand[x][y][0])

        for j in range(1,10,1):
            if removeRadek.count(j) > 1 or removeCtverec.count(j) > 1 or removeSloupec.count(j) > 1:
                if PrvniKontrola == False:
                    return False
                else:
                    if zkontrolovani:
                        return False

                    if askyesno("Dotaz","Sudoku nemá řešení. Chcete jej odstranit z databáze?"):
                        db.execute("delete from zadani where zadani='"+stringFormat(cislaVsudoku)+"'")
                        db.commit()
                        smazat_sudoku()
                        menuCesta = []
                        prechod_v_menu(menuCesta)
                    return False


        for j in range(0,9,1):
            for kandidat in removeRadek:
                if kandidat in cand[i][j] and len(cand[i][j]) > 1:
                        cand[i][j].remove(kandidat)


            for kandidat in removeSloupec:
                if kandidat in cand[j][i] and len(cand[j][i]) > 1:
                        cand[j][i].remove(kandidat)

            dm2 = divmod(j,3)
            x = dm[1]*3+dm2[1]
            y = dm[0]*3+dm2[0]
            for kandidat in removeCtverec:
                if kandidat in cand[x][y] and len(cand[x][y]) > 1:
                        cand[x][y].remove(kandidat)


    return cand

def najdi_uzel(cand):
    for i in range(0,9,1):
        for j in range(0,9,1):
            if len(cand[i][j]) > 1:
                return [i,j]
    return False

def kontrola(cand):
    candBef = []
    while not candBef == cand:
        candBef = deepcopy(cand)
        cand = pravidlova_zkouska(cand)
        if cand == False:
            return False
    return cand

def brute_force(cand):
    hloubka = 0
    cesta = []
    mezipamet = []
    mezipamet.append(deepcopy(cand))
    cesta.append(0)
    iterace = 0

    while True:
        iterace = iterace + 1

        uzel = najdi_uzel(cand)

        #print("")
        #print("iterace: "+str(iterace))
        #print("hloubka: "+str(hloubka))
        #print("cesta: "+str(cesta))
        #print("uzel: "+str(uzel))

        if uzel == False:
            #print("Hotovo!")
            break

        if cesta[hloubka] < len(cand[uzel[0]][uzel[1]]):
            cand[uzel[0]][uzel[1]] = [cand[uzel[0]][uzel[1]][cesta[hloubka]]]
        else:
            hloubka = hloubka - 1
            if hloubka == -1:
                #print("Sudoku nema reseni!")
                return False
            cesta[hloubka] = cesta[hloubka] + 1
            cand = deepcopy(mezipamet[hloubka])
            del(cesta[hloubka+1])
            del(mezipamet[hloubka+1])
            #print("FAIL, vracim se zpatky a zkusim jine cislo.")
            continue
        cand = kontrola(cand)
        if cand == False:
            cand = deepcopy(mezipamet[hloubka])
            cesta[hloubka] = cesta[hloubka] + 1
            #print("FAIL, zkusim jine cislo.")
        else:
            hloubka = hloubka + 1
            mezipamet.append(deepcopy(cand))
            cesta.append(0)
            #print("OK, jdu hloubeji.")
    return cand




C = Canvas(okno, height=701,width=701)
C.create_rectangle(1,1,701,701,outline="#000000", width=3, fill="#ffffff")
okno.protocol("WM_DELETE_WINDOW",konec)
okno.bind("<Left>",vlevo)
okno.bind("<Right>",vpravo)
okno.bind("<Up>",nahoru)
okno.bind("<Down>",dolu)
okno.bind("<Escape>",escape)
okno.bind("<Return>",enter)
okno.bind("<Key>",key)
okno.bind("<Button 3>", Rklik)
okno.bind("<BackSpace>",bksp)
okno.bind("<Delete>",delete)



for i in range(1,9,1):
    if i in (1,2,4,5,7,8):
        C.create_rectangle(0,i*78,699,i*78+1, outline="#aaaaaa")
        C.create_rectangle(i*78,0,i*78+1,699, outline="#aaaaaa")


for i in range(1,9,1):
    if i in(3,6,9):
        C.create_rectangle(0,i*78,702,i*78+2, fill="#000000")
        C.create_rectangle(i*78,0,i*78+2,702, fill="#000000")

C.create_rectangle(1,1,702,702,outline="#000000", width=3)
C.place(x=2,y=2)
C.bind("<Button 1>",klik)

menu = Label(okno, text="MENU", font="Arial 20 bold")
menu.place(x=822,y=10)

log = Label(okno, text="LOG", font="Arial 20 bold")
log.place(x=832,y=330)

lgC = Canvas(okno, width=270, height=320, bg="#ffffff")
lgC.place(x=730, y=370)

polozkyMenu[0] = Canvas(okno,width=200, height=50, bg="#ffffff")
polozkyMenu[0].create_text(100,25,text="Zadání (z)", font="Arial 20")
polozkyMenu[0].place(x=765,y=50)
polozkyMenu[0].bind("<Enter>",najeti0)
polozkyMenu[0].bind("<Leave>",sjeti0)
polozkyMenu[0].bind("<Button 1>",klik0)

polozkyMenu[1] = Canvas(okno,width=200, height=50, bg="#ffffff")
polozkyMenu[1].create_text(100,25,text="Řešení (r)", font="Arial 20")
polozkyMenu[1].place(x=765,y=120)
polozkyMenu[1].bind("<Enter>",najeti1)
polozkyMenu[1].bind("<Leave>",sjeti1)
polozkyMenu[1].bind("<Button 1>",klik1)

polozkyMenu[2] = Canvas(okno,width=200, height=50, bg="#ffffff")
polozkyMenu[2].create_text(100,25,text="Návod (n)", font="Arial 20")
polozkyMenu[2].place(x=765,y=190)
polozkyMenu[2].bind("<Enter>",najeti2)
polozkyMenu[2].bind("<Leave>",sjeti2)
polozkyMenu[2].bind("<Button 1>",klik2)

polozkyMenu[3] = Canvas(okno,width=200, height=50, bg="#ffffff")
polozkyMenu[3].create_text(100,25,text="Konec (Esc)", font="Arial 20")
polozkyMenu[3].place(x=765,y=260)
polozkyMenu[3].bind("<Enter>",najeti3)
polozkyMenu[3].bind("<Leave>",sjeti3)
polozkyMenu[3].bind("<Button 1>",klik3)

okno.mainloop()